<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="FluentFin.Controls.TransportControls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:b="using:FluentFin.Behaviors"
    xmlns:c="using:FluentFin.Converters"
    xmlns:cc="using:CommunityToolkit.WinUI.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactivity"
    xmlns:ctk="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dwui="using:DevWinUI"
    xmlns:fmp="using:FlyleafLib.MediaPlayer"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:jm="using:Jellyfin.Sdk.Generated.Models"
    xmlns:local="using:FluentFin.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:viewmodels="using:FluentFin.ViewModels"
    x:Name="Control"
    mc:Ignorable="d">

    <UserControl.Resources>
        <cc:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <cc:StringVisibilityConverter x:Key="StringVisibilityConveter" />
        <cc:SwitchConverter x:Name="PlayPauseIconConveter" TargetType="fmp:Status">
            <ctk:Case Value="Playing">
                <SymbolIcon Symbol="Pause" />
            </ctk:Case>
            <ctk:Case IsDefault="True" Value="Paused">
                <SymbolIcon Symbol="Play" />
            </ctk:Case>
        </cc:SwitchConverter>
        <cc:SwitchConverter x:Name="PlaylistVisibilityConverter" TargetType="jm:BaseItemDto_Type">
            <ctk:Case Value="Episode">
                <Visibility>Visible</Visibility>
            </ctk:Case>
            <ctk:Case IsDefault="True">
                <Visibility>Collapsed</Visibility>
            </ctk:Case>
        </cc:SwitchConverter>
        <cc:EmptyObjectToObjectConverter
            x:Key="ObjectToVisibilityConverter"
            EmptyValue="Collapsed"
            NotEmptyValue="Visible" />
        <cc:CollectionVisibilityConverter x:Key="EmptyCollectionVisibilityConverter" />
        <LinearGradientBrush x:Name="TransportControlBackground" MappingMode="RelativeToBoundingBox" Opacity="0.2" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="1" Color="Black" />
        </LinearGradientBrush>
        <cc:StringFormatConverter x:Key="StringFormatConverter" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid PointerMoved="Grid_PointerMoved">
            <!--  Skip  -->
            <Button
                x:Name="DynamicSkipIntroButton"
                Width="150"
                Height="50"
                Margin="10,30"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                VerticalContentAlignment="Center"
                Command="{x:Bind SkipCommand, Mode=OneWay}"
                FontSize="20"
                FontWeight="Bold"
                Foreground="White"
                Visibility="{x:Bind IsSkipButtonVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.Background>
                    <SolidColorBrush Opacity="0.5" Color="Black" />
                </Button.Background>
                <StackPanel
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="10">
                    <FontIcon VerticalAlignment="Center" Glyph="&#xEB9D;" />
                    <TextBlock VerticalAlignment="Center" Text="Skip" />
                </StackPanel>
            </Button>

            <dwui:OutlineTextControl
                x:Name="Subtitles"
                Height="300"
                VerticalAlignment="Bottom"
                DashStyle="Solid"
                FontColor="White"
                FontSize="60"
                FontWeight="ExtraBold"
                OutlineColor="Black"
                ShowNonOutlineText="True"
                StrokeWidth="2"
                Visibility="{x:Bind Subtitles.Text, Mode=OneWay, Converter={StaticResource StringVisibilityConveter}}" />


            <!--  Logo  -->
            <Grid
                x:Name="TitleSection"
                Margin="36,36,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                x:FieldModifier="Public">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Image Height="100" Source="{x:Bind c:BaseItemDtoConverters.GetImage(Playlist.SelectedItem.Dto, jm:ImageType.Logo, 100), Mode=OneWay}" />
                <TextBlock
                    x:Name="TxtTitleTime"
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    x:FieldModifier="Public"
                    Style="{ThemeResource TitleLargeTextBlockStyle}" />
            </Grid>


            <!--  Trickplay  -->
            <TeachingTip
                x:Name="TrickplayTip"
                PointerExited="TimeSlider_PointerExited"
                PreferredPlacement="BottomLeft"
                Style="{ThemeResource NoHeaderClose}">
                <TeachingTip.Content>
                    <Grid PointerExited="TimeSlider_PointerExited">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollViewer
                            x:Name="TrickplayScrollViewer"
                            Width="{x:Bind Trickplay.Width, Mode=OneWay}"
                            Height="{x:Bind Trickplay.Height, Mode=OneWay}"
                            HorizontalScrollBarVisibility="Hidden"
                            HorizontalScrollMode="Enabled"
                            VerticalScrollBarVisibility="Hidden"
                            VerticalScrollMode="Enabled">
                            <Image Source="{x:Bind c:Converters.GetImage(Trickplay.TileImage), Mode=OneWay}" Stretch="None">
                                <Image.RenderTransform>
                                    <TranslateTransform X="{x:Bind Trickplay.Translate.X, Mode=OneWay}" Y="{x:Bind Trickplay.Translate.Y, Mode=OneWay}" />
                                </Image.RenderTransform>
                                <Image.Clip>
                                    <RectangleGeometry Rect="{x:Bind c:Converters.ToRect(Trickplay.Clip), Mode=OneWay}" />
                                </Image.Clip>
                            </Image>
                        </ScrollViewer>
                        <TextBlock
                            Grid.Row="1"
                            Margin="{StaticResource XSmallTopMargin}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="{x:Bind c:Converters.TimeSpanToString(Trickplay.Position), Mode=OneWay}" />
                    </Grid>
                </TeachingTip.Content>
            </TeachingTip>
        </Grid>

        <Grid
            x:Name="Bar"
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:FieldModifier="public"
            Background="{StaticResource TransportControlBackground}">
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation
                    From="0"
                    To="1.0"
                    Duration="0:0:1" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation To="0" Duration="0:0:1" />
            </animations:Implicit.HideAnimations>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="8,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <!--  Current Time | Slider | Remaining Time  -->
                <TextBlock
                    x:Name="TxtCurrentTime"
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center" />

                <ctk:SwitchPresenter
                    Grid.Column="1"
                    TargetType="x:Boolean"
                    Value="False">
                    <ctk:Case Value="True">
                        <ProgressBar
                            Margin="10,0,10,0"
                            VerticalAlignment="Center"
                            IsIndeterminate="True" />
                    </ctk:Case>
                    <ctk:Case Value="False">
                        <Slider
                            x:Name="TimeSlider"
                            Grid.Column="1"
                            Margin="10,0,10,0"
                            VerticalAlignment="Center"
                            IsTabStop="False"
                            PointerExited="TimeSlider_PointerExited"
                            PointerMoved="TimeSlider_PointerEntered" />
                    </ctk:Case>
                </ctk:SwitchPresenter>

                <TextBlock
                    x:Name="TxtRemainingTime"
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />
            </Grid>

            <Grid Grid.Row="1" Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <CommandBar
                    DefaultLabelPosition="Collapsed"
                    FlowDirection="RightToLeft"
                    IsDynamicOverflowEnabled="False"
                    OverflowButtonVisibility="Collapsed">

                    <AppBarButton
                        x:Name="SkipForwardButton"
                        Click="SkipForwardButton_Click"
                        Icon="{ui:FontIcon Glyph=&#xED3D;}"
                        IsTapEnabled="False"
                        Label="Seek forward" />

                    <AppBarButton
                        x:Name="NextTrackButton"
                        Command="{x:Bind Playlist.SelectNextCommand, Mode=OneWay}"
                        Icon="Next"
                        IsTabStop="False"
                        Label="Next Episode" />

                    <AppBarButton
                        x:Name="PlayPauseButton"
                        Click="PlayPauseButton_Click"
                        IsTabStop="False"
                        Label="Play/Pause" />

                    <AppBarButton
                        x:Name="PreviousTrackButton"
                        Command="{x:Bind Playlist.SelectPrevCommand, Mode=OneWay}"
                        Icon="Previous"
                        IsTabStop="False"
                        Label="Previous Episode" />

                    <AppBarButton
                        x:Name="SkipBackwardButton"
                        Click="SkipBackwardButton_Click"
                        Icon="{ui:FontIcon Glyph=&#xED3C;}"
                        IsTapEnabled="False"
                        Label="Seek backward" />


                </CommandBar>

                <CommandBar
                    Grid.Column="1"
                    DefaultLabelPosition="Collapsed"
                    IsDynamicOverflowEnabled="True"
                    OverflowButtonVisibility="Auto">

                    <AppBarSeparator />

                    <AppBarButton
                        Icon="{ui:FontIcon Glyph=&#xE8FD;}"
                        IsTabStop="False"
                        Label="Playlist"
                        Visibility="{x:Bind c:Converters.VisibleIfMoreThanOne(Playlist.Items), Mode=OneWay}">
                        <AppBarButton.Flyout>
                            <Flyout>
                                <ListView ItemsSource="{x:Bind Playlist.Items, Mode=OneWay}" SelectedItem="{x:Bind Playlist.SelectedItem, Mode=TwoWay}">
                                    <ListView.Header>
                                        <TextBlock
                                            Margin="{StaticResource SmallTopBottomMargin}"
                                            Style="{ThemeResource SubheaderTextBlockStyle}"
                                            Text="Playlist" />
                                    </ListView.Header>
                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="viewmodels:PlaylistItem">
                                            <Grid ColumnSpacing="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <local:LoadingImage Height="50" Source="{x:Bind c:BaseItemDtoConverters.GetImage(Dto, jm:ImageType.Thumb, 50)}" />

                                                <StackPanel Grid.Column="1">
                                                    <TextBlock Style="{ThemeResource BodyStrongTextBlockStyle}" Text="{x:Bind c:BaseItemDtoConverters.GetSeasonAndEpisodeNumber(Dto)}" />
                                                    <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text="{x:Bind Dto.Name}" />
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Padding" Value="4" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton
                        x:Name="FullWindowButton"
                        x:FieldModifier="Public"
                        IsTabStop="False"
                        Label="Toggle Fullscreen">
                        <AppBarButton.Icon>
                            <SymbolIcon
                                x:Name="FullWindowSymbol"
                                x:FieldModifier="Public"
                                Symbol="FullScreen" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton Icon="Volume" Label="Volume">
                        <AppBarButton.Flyout>
                            <Flyout>
                                <Slider
                                    x:Name="VolumeSlider"
                                    Width="100"
                                    IsTabStop="False"
                                    Maximum="100"
                                    Minimum="0" />
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton
                        x:Name="CCSelectionButton"
                        Flyout="{x:Bind c:Converters.GetSubtitlesFlyout(Player, Playlist.SelectedItem.Media), Mode=OneWay}"
                        Icon="{ui:FontIcon Glyph=&#xED1E;}"
                        IsTabStop="False"
                        Label="Subtitles"
                        Visibility="{x:Bind CCSelectionButton.Flyout, Converter={StaticResource ObjectToVisibilityConverter}, Mode=OneWay}" />

                    <AppBarButton
                        x:Name="AudioSelectionButton"
                        x:FieldModifier="Public"
                        Icon="{ui:FontIcon Glyph=&#xED1F;}"
                        IsTabStop="False"
                        Label="Audio"
                        Visibility="{x:Bind AudioSelectionButton.Flyout, Converter={StaticResource ObjectToVisibilityConverter}, Mode=OneWay}" />

                </CommandBar>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
